---
- set_fact:
  instackenv_file: "{{ instackenv_file|default('~/instackenv.json', true) }}"

- name: set instackfile
  stat:
      path: "{{ instackenv_file }}"
  register: stat_result

- name: Download instackenv.json
  get_url:
      url: "{{ alias.lab_url }}/cloud/{{ cloud_name }}_instackenv.json"
      dest: "{{ instackenv_file }}"
      mode: '0440'
  when: (stat_result.stat.exists == False and lab_name == "alias")
 

- name: Download instackenv.json
  get_url:
      url: "{{ scale.lab_url }}/cloud/{{ cloud_name }}_instackenv.json"
      dest: "{{ instackenv_file }}"
      mode: '0440'
  when: (stat_result.stat.exists == False and lab_name == "scale")

- set_fact:
      instackenv_content: "{{ instackenv_content }}"
      undercloud_hostname: "{{ undercloud_hostname|default(instackenv_content.nodes[0].pm_addr | replace('mgmt-','') | replace('-drac', '')) }}"
      undercloud_instackenv_path: "~/undercloud_instackenv.json"
  vars:
      instackenv_content: "{{ lookup('file', '{{ instackenv_file }}') | from_json }}"

- name: check undercloud_instackenv exists
  stat:
      path: "~/undercloud_instackenv.json"
  register: undercloud_instackenv_stat

- block:
      - name: set undercloud_instackenv content
        set_fact:
            instackenv_content: |
              {% set a=instackenv_content.pop('nodes') %}
              {{ instackenv_content | combine({'nodes': a|difference([a[0]])}, recursive=True) }}

      - name: create undercloud_instackenv.json file
        copy:
            dest: "{{ undercloud_instackenv_path }}"
            content: "{{ instackenv_content }}"

      - name: replace instackenv_content with original data
        set_fact:
            instackenv_content: "{{ lookup('file', '{{ instackenv_file }}') | from_json }}"
  when: undercloud_instackenv_stat.stat.exists == False
